/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, PerspectiveCamera } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function ModelPenBookComponent(props) {
  const { nodes, materials } = useGLTF("./blue_pen_and_book.glb");

  const modelRef = useRef();

  // useFrame((state, delta) => {
  //   console.log(modelRef);
  //   modelRef.current.rotation.y += delta * 0.2;
  // });
  return (
    <group
      // ref={modelRef}
      {...props}
      dispose={null}
    >
      <PerspectiveCamera
        name='camera'
        fov={40}
        near={10}
        far={1000}
        position={[10, 0, 50]}
      />
      {/* <pointLight
        intensity={10}
        position={[100, 50, 100]}
        rotation={[-Math.PI / 2, 0, 0]}
      /> */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chrome.geometry}
        material={materials["metalic blue"]}
        rotation={[1.01, -0.39, 1.34]}
        scale={0.37}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Matte.geometry}
        material={materials.Matte}
        rotation={[1.01, -0.39, 1.34]}
        scale={0.37}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Glossy.geometry}
        material={materials.glossy}
        rotation={[1.01, -0.39, 1.34]}
        scale={0.37}
      />
      <group
        position={[0.34, 0.46, 1.9]}
        rotation={[-3.11, -0.03, -35]}
        scale={-1.35}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube001.geometry}
          material={materials.blue}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube001_1.geometry}
          material={materials.Material}
        />
      </group>
    </group>
  );
}

useGLTF.preload("./blue_pen_and_book.glb");
